name: Backport merge pull request production to staging
on:
  push:
    branches:
      - production # base branch
permissions:
  contents: write # so it can comment
  pull-requests: write # so it can create pull requests hogehoge
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  backport_to_staging:
    name: Backport pull request to staging
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: staging
    # Don't run on closed unmerged pull requests
    # if: |
    #   github.event.pull_request.merged == true
    #   && github.event.action == 'closed'
    steps:
      - uses: actions/checkout@v3
      - name: Create backport PR
        run: |
          # GitHub CLIでプルリクエストのヘッドブランチを取得
          # branch_name=production
          # echo "PR branch name: $branch_name"
          # github actions 内で backport 用のローカルリポジトリを作成
          git checkout -b "backport/$branch_name-backport-$TARGET_BRANCH"
          # リモートブランチに push
          git push -u origin "backport/$branch_name-backport-$TARGET_BRANCH"
          # PR 作成、 head は現在 checkout している backport ブランチになる
          gh pr create -B $TARGET_BRANCH -t "[backport] backport/$branch_name to $TARGET_BRANCH" -b "# Description
          backport of #${{ github.event.number }} to $TARGET_BRANCH"
          # 後続のステップで利用するため作成した PR の URL を取得し環境変数に入れる
          echo "target_pr_url=$(gh pr list -B $TARGET_BRANCH -H "backport/$branch_name-backport-$TARGET_BRANCH" --jq ".[] | .url" --json url)" >> "$GITHUB_ENV"
      - uses: hmarr/auto-approve-action@v3
        with:
          pull-request-number: "$target_pr_url"
      - name: Merge backport PR
        if: env.target_pr_url != null
        run: |
          gh pr merge --merge "$target_pr_url"
  backport_to_lab:
    name: Backport pull request to lab
    runs-on: ubuntu-latest
    needs: backport_to_staging
    env:
      TARGET_BRANCH: lab
    # Don't run on closed unmerged pull requests
    # if: |
    #   github.event.pull_request.merged == true
    #   && github.event.action == 'closed'
    steps:
      - uses: actions/checkout@v3
      - name: Create backport PR
        run: |
          git fetch
          git checkout staging
          # GitHub CLIでプルリクエストのヘッドブランチを取得
          branch_name=$(gh pr view ${{ github.event.number }} --json headRefName -q '.headRefName')
          echo "PR branch name: $branch_name"
          # github actions 内で backport 用のローカルリポジトリを作成
          git checkout -b "backport/$branch_name-backport-$TARGET_BRANCH"
          # リモートブランチに push
          git push -u origin "backport/$branch_name-backport-$TARGET_BRANCH"
          # PR 作成、 head は現在 checkout している backport ブランチになる
          gh pr create -B $TARGET_BRANCH -t "[backport] backport/$branch_name to $TARGET_BRANCH" -b "# Description
          backport of #${{ github.event.number }} to $TARGET_BRANCH"
          # 後続のステップで利用するため作成した PR の URL を取得し環境変数に入れる
          echo "target_pr_url=$(gh pr list -B $TARGET_BRANCH -H "backport/$branch_name-backport-$TARGET_BRANCH" --jq ".[] | .url" --json url)" >> "$GITHUB_ENV"
      - uses: hmarr/auto-approve-action@v3
        with:
          pull-request-number: "$target_pr_url"
      - name: Merge backport PR
        if: env.target_pr_url != null
        run: |
          gh pr merge --merge "$target_pr_url"

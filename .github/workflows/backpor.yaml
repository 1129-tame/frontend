name: Backport merge pull request production to staging
on:
  pull_request_target:
    types:
      - closed
    branches:
      - production # base branch
  
permissions:
  contents: write # so it can comment
  pull-requests: write # so it can create pull requests
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  backport_to_staging_on_pull_request_target:
    name: Backport pull request to staging
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: staging
    # Don't run on closed unmerged pull requests
    if: |
      github.event_name == 'pull_request_target'
      && github.event.pull_request.merged == true
      && github.event.action == 'closed'
    steps:
      - uses: actions/checkout@v3
      - name: Create backport PR
        run: |
          echo "Github.event_name is ${{ github.event_name }}"
          echo "Github.event.pull_request is ${{ github.event.pull_request }}"
          # github actions 内で backport 用のローカルリポジトリを作成
          git checkout -b "backport/${{ github.head_ref }}-to-merge-$TARGET_BRANCH"
          # リモートブランチに push
          git push -u origin "backport/${{ github.head_ref }}-to-merge-$TARGET_BRANCH"
          # PR 作成、 head は現在 checkout している backport ブランチになる
          gh pr create -B $TARGET_BRANCH -t "[backport] ${{ github.head_ref }} to $TARGET_BRANCH" -b "# Description
          backport of #${{ github.event.number }} to $TARGET_BRANCH"
          # 後続のステップで利用するため作成した PR の URL を取得し環境変数に入れる
          echo "target_pr_url=$(gh pr list -B $TARGET_BRANCH -H "backport/${{ github.head_ref }}-to-merge-$TARGET_BRANCH" --jq ".[] | .url" --json url | grep -oP '/pull/\K\d+')" >> "$GITHUB_ENV"
      - uses: hmarr/auto-approve-action@v3
        with:
          pull-request-number: ${{ env.target_pr_url }}
          github-token: ${{ secrets.MY_ACCESS_TOKEN }}
      - name: Merge backport PR
        if: env.target_pr_url != null
        run: |
          gh pr merge --merge "$target_pr_url"
  backport_to_lab_on_pull_request_target:
    name: Backport pull request to lab
    runs-on: ubuntu-latest
    needs: backport_to_staging_on_pull_request_target
    env:
      TARGET_BRANCH: lab
    # Don't run on closed unmerged pull requests
    if: |
      github.event_name == 'pull_request_target'
      && github.event.pull_request.merged == true
      && github.event.action == 'closed'
    steps:
      - uses: actions/checkout@v3
      - name: Create backport PR
        run: |
          # merge されたブランチの production 内にいるので staging に checkout 
          git fetch
          git checkout staging
          echo "Github.event_name is ${{ github.event_name }}"
          echo "Github.event.pull_request is ${{ github.event.pull_request }}"
          # github actions 内で backport 用のローカルリポジトリを作成
          git checkout -b "backport/${{ github.head_ref }}-to-merge-$TARGET_BRANCH"
          # リモートブランチに push
          git push -u origin "backport/${{ github.head_ref }}-to-merge-$TARGET_BRANCH"
          # PR 作成、 head は現在 checkout している backport ブランチになる
          gh pr create -B $TARGET_BRANCH -t "[backport] ${{ github.head_ref }} to $TARGET_BRANCH" -b "# Description
          backport of #${{ github.event.number }} to $TARGET_BRANCH"
          # 後続のステップで利用するため作成した PR の URL を取得し環境変数に入れる
          echo "target_pr_url=$(gh pr list -B $TARGET_BRANCH -H "backport/${{ github.head_ref }}-to-merge-$TARGET_BRANCH" --jq ".[] | .url" --json url | grep -oP '/pull/\K\d+')" >> "$GITHUB_ENV"
      - uses: hmarr/auto-approve-action@v3
        with:
          pull-request-number: ${{ env.target_pr_url }}
          github-token: ${{ secrets.MY_ACCESS_TOKEN }}
      - name: Merge backport PR
        if: env.target_pr_url != null
        run: |
          gh pr merge --merge "$target_pr_url"